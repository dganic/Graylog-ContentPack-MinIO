{
  "v": 1,
  "id": "1f7550ae-aecb-47b7-aaf7-fefadbedc733",
  "rev": 1,
  "name": "Graylog-ContentPack-MinIO",
  "summary": "Graylog Content Pack for MinIO Audit Logging ",
  "description": "This Content Pack enables you to parse the logs which are generated by MiniIO. The logs are parsed to enable dashboards, streams.",
  "vendor": "Aleksandr Anishchenko dganic@yandex.ru",
  "url": "https://github.com/dganic/Graylog-ContentPack-MinIO",
  "parameters": [],
  "entities": [
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "b37d48e4-c724-43d0-8e84-f24b90501e14",
      "data": {
        "title": {
          "@type": "string",
          "@value": "check belonging to messages from MinIO Audit"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"check belonging to messages from MinIO Audit\"\n\nwhen\n    has_field(\"message\") &&\n    to_string($message.message) == \"minio audit\"\n\nthen\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "021987d2-448e-4ee1-9cd6-cc74aff6dde7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "parse responseHeader field from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"parse responseHeader field from MinIO cluster Audit messages\"\n\nwhen\n    true\n\nthen\n    let parsed_json_tree = parse_json(value: to_string($message.responseHeader));\n    let parsed_fields = select_jsonpath(\n                            json: parsed_json_tree, \n                            paths:{\n                                content_type_response: \"$.Content-Type\",\n                                content_length_response: \"$.Content-Length\",\n                                server: \"$.Server\",\n                                bucket_region: \"$.X-Amz-Bucket-Region\"\n                            }\n                        ); \n    set_fields(fields: parsed_fields);\n    \n    remove_field(field: \"responseHeader\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2840ed0f-e90e-48fd-aee6-76a42f169572",
      "data": {
        "title": {
          "@type": "string",
          "@value": "parse requestClaims field from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"parse requestClaims field from MinIO cluster Audit messages\"\n\nwhen\n    has_field(\"requestClaims\")\n\nthen\n    let parsed_json_tree = parse_json(value: to_string($message.requestClaims));\n    let parsed_fields = select_jsonpath(\n                            json: parsed_json_tree, \n                            paths:{\n                                request_policy: \"$.policy\"\n                            }\n                        ); \n    set_fields(fields: parsed_fields);\n    remove_field(field: \"requestClaims\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "c0607dee-71d5-4fd4-bddc-473e73d9794c",
      "data": {
        "title": {
          "@type": "string",
          "@value": "add parsed authorization fields to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"add parsed authorization fields to MinIO Audit messages\"\n\nwhen\n    has_field(\"authorization\")\n\nthen\n    let parsed_fields = grok(\n                            pattern: \"%{MINIO_AUTHORIZATION}\", \n                            value: to_string($message.authorization), \n                            only_named_captures: true\n                        );\n    set_fields(fields: parsed_fields);\n    remove_field(field: \"authorization\");\n    \nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "7d8a60fb-3780-42d2-ba34-af951abbc02d",
      "data": {
        "title": {
          "@type": "string",
          "@value": "check for existence of fields in MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"check for existence of fields in MinIO Audit messages\"\n\nwhen\n    has_field(\"api\") &&\n    has_field(\"requestHeader\") &&\n    has_field(\"responseHeader\") &&\n    has_field(\"trigger\")\n\nthen\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "a0463f17-9405-4ffc-9aa6-d2ad7f80274d",
      "data": {
        "title": {
          "@type": "string",
          "@value": "add parsed time_first_byte field to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"add parsed time_first_byte field to MinIO Audit messages\"\n\nwhen\n    has_field(\"time_first_byte\")\n\nthen\n    let parse_field_time_first_byte = grok(\n                                        pattern: \"%{MINIO_TIME_HTTP:time_first_byte}\", \n                                        value: to_string($message.time_first_byte), \n                                        only_named_captures: true\n                                      );\n    set_fields(fields: parse_field_time_first_byte);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2a2e6cda-3d8f-426b-8eec-92f37b7f959c",
      "data": {
        "title": {
          "@type": "string",
          "@value": "construct the message field v1 to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"construct the message field v1 to MinIO Audit messages\"\n\nwhen\n\thas_field(\"path\")\n\nthen\n    let new_message = to_string($message.action) + \" \" + \n                       to_string($message.access_key_id) + \" \" +\n                       to_string($message.bucket_region) + \"/\" +\n                       to_string($message.bucket) + \"/\" +\n                       to_string($message.path);\n    set_field(field: \"message\", value: new_message);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "7d34ea65-9aff-4d6e-9d71-68cf3d4e81dd",
      "data": {
        "title": {
          "@type": "string",
          "@value": "parse requestHeader field from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"parse requestHeader field from MinIO cluster Audit messages\"\n\nwhen\n    true\n\nthen\n    let parsed_json_tree = parse_json(value: to_string($message.requestHeader));\n    let parsed_fields = select_jsonpath(\n                            json: parsed_json_tree, \n                            paths:{\n                                authorization: \"$.Authorization\",\n                                content_hash: \"$.X-Amz-Content-Sha256\",\n                                content_type_request: \"$.Content-Type\",\n                                content_length_request: \"$.Content-Length\"\n                            }\n                        ); \n    set_fields(fields: parsed_fields);\n    \n    remove_field(field: \"requestHeader\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "a9274944-ee14-46ec-beaf-38909bb9de42",
      "data": {
        "title": {
          "@type": "string",
          "@value": "construct the message field v2 to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"construct the message field v2 to MinIO Audit messages\"\n\nwhen\n\thas_field(\"object\")\n\nthen\n    let new_message = to_string($message.action) + \" \" + \n                       to_string($message.access_key_id) + \" \" +\n                       to_string($message.bucket_region) + \"/\" +\n                       to_string($message.bucket) + \"/\" +\n                       to_string($message.object);    \n    set_field(field: \"message\", value: new_message);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "87e21d63-dd15-42f6-aae1-f127b61cdd81",
      "data": {
        "title": {
          "@type": "string",
          "@value": "add renamed fields to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"add renamed fields to MinIO Audit messages\"\n\nwhen\n    has_field(\"userAgent\") && \n    has_field(\"requestID\") &&\n    has_field(\"time\") &&\n    has_field(\"deploymentid\") &&\n    has_field(\"remotehost\")\nthen\n    rename_field(old_field: \"userAgent\", new_field: \"user_agent\");\n    rename_field(old_field: \"requestID\", new_field: \"request_id\");\n    rename_field(old_field: \"time\", new_field: \"timestamp_log\");\n    rename_field(old_field: \"deploymentid\", new_field: \"deployment_id\");\n    rename_field(old_field: \"remotehost\", new_field: \"remote_host_ip\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "32b7a649-db88-42a3-9152-bd4ef49ae9e5",
      "data": {
        "title": {
          "@type": "string",
          "@value": "construct the message field v3 to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"construct the message field v3 to MinIO Audit messages\"\n\nwhen\n\t! has_field(\"object\") &&\n\t! has_field(\"path\")\nthen\n    let new_message = to_string($message.action) + \" \" + \n                       to_string($message.access_key_id) + \" \" +\n                       to_string($message.bucket_region) + \"/\" +\n                       to_string($message.bucket) + \"/\";    \n    set_field(field: \"message\", value: new_message);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "5a64d091-d8b9-44ba-b851-e547e43e3a96",
      "data": {
        "name": "MINIO_TIME_HTTP",
        "pattern": "%{NUMBER}"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "6ef0a631-ff04-47a0-815d-f019e712efa9",
      "data": {
        "title": {
          "@type": "string",
          "@value": "remove parsed fields (api, requestHeader, responseHeader) from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"remove parsed fields (api, requestHeader, responseHeader) from MinIO cluster Audit messages\"\n\nwhen\n    true\n\nthen\n    remove_field(\"api\");\n    remove_field(\"requestHeader\");\n    remove_field(\"responseHeader\");\nend\n    "
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline",
        "version": "1"
      },
      "id": "44e46fde-da76-42e7-8187-4cc65d34ed14",
      "data": {
        "title": {
          "@type": "string",
          "@value": "MinIO Audit"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "pipeline \"MinIO Audit\"\nstage 0 match all\nrule \"check belonging to messages from MinIO Audit\"\nrule \"check for existence of fields in MinIO Audit messages\"\nstage 1 match either\nrule \"parse api field from MinIO cluster Audit messages\"\nrule \"parse requestHeader field from MinIO cluster Audit messages\"\nrule \"parse responseHeader field from MinIO cluster Audit messages\"\nrule \"parse requestQuery field from MinIO cluster Audit messages\"\nrule \"parse requestClaims field from MinIO cluster Audit messages\"\nstage 3 match either\nrule \"check for existence of fields for construct message field in MinIO Audit messages\"\nstage 4 match either\nrule \"construct the message field v1 to MinIO Audit messages\"\nrule \"construct the message field v2 to MinIO Audit messages\"\nrule \"construct the message field v3 to MinIO Audit messages\"\nrule \"construct the message field v4 to MinIO Audit messages\"\nstage 2 match either\nrule \"add parsed authorization fields to MinIO Audit messages\"\nrule \"add renamed fields to MinIO Audit messages\"\nrule \"add parsed time_response field to MinIO Audit messages\"\nrule \"add parsed time_first_byte field to MinIO Audit messages\"\nend"
        },
        "connected_streams": [
          {
            "@type": "string",
            "@value": "df3ff755-d487-4496-98c0-ac096b326597"
          }
        ]
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "ca335e7c-31a5-47c8-9388-74ca53d768c7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "check for existence of fields for construct message field in MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"check for existence of fields for construct message field in MinIO Audit messages\"\n\nwhen\n\thas_field(\"action\") && \n\thas_field(\"access_key_id\") &&\n\thas_field(\"bucket_region\") &&\n\thas_field(\"user_agent\")\n\nthen\nend\n\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9e763bd9-338f-4ad9-8774-403b37ee1211",
      "data": {
        "title": {
          "@type": "string",
          "@value": "construct the message field v4 to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"construct the message field v4 to MinIO Audit messages\"\n\nwhen\n    ! has_field(\"bucket\") &&\n\t! has_field(\"object\") &&\n\t! has_field(\"path\")\n\nthen\n    let new_message = to_string($message.action) + \" \" + \n                      to_string($message.access_key_id) + \" \" +\n                      to_string($message.bucket_region) + \"/\";    \n    set_field(field: \"message\", value: new_message);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "7103f1da-fd1a-4547-9a84-7f0c8becba00",
      "data": {
        "title": {
          "@type": "string",
          "@value": "parse api field from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"parse api field from MinIO cluster Audit messages\"\n\nwhen\n    true\n\nthen\n    let parsed_json_tree = parse_json(value: to_string($message.api));\n    let parsed_fields = select_jsonpath(\n                            json: parsed_json_tree, \n                            paths:{\n                                action: \"$.name\",\n                                bucket: \"$.bucket\",\n                                object: \"$.object\",\n                                status: \"$.status\",\n                                status_code: \"$.statusCode\",\n                                time_first_byte: \"$.timeToFirstByte\",\n                                time_response: \"$.timeToResponse\"\n                            }\n                        ); \n    set_fields(fields: parsed_fields);\n    \n    remove_field(field: \"api\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "47d846a5-4a7c-4c7d-9531-49ddaed0b7e2",
      "data": {
        "title": {
          "@type": "string",
          "@value": "parse requestQuery field from MinIO cluster Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"parse requestQuery field from MinIO cluster Audit messages\"\n\nwhen\n    has_field(\"requestQuery\")\n\nthen\n    let parsed_json_tree = parse_json(value: to_string($message.requestQuery));\n    let parsed_fields = select_jsonpath(\n                            json: parsed_json_tree, \n                            paths:{\n                                path: \"$.prefix\",\n                                encoding_type: \"$.encoding-type\",\n                                list_type: \"$.list_type\"\n                            }\n                        ); \n    set_fields(fields: parsed_fields);\n    \n    remove_field(field: \"requestQuery\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "dashboard",
        "version": "2"
      },
      "id": "70d939b7-98bf-4c27-8d59-a8a6d1394431",
      "data": {
        "summary": {
          "@type": "string",
          "@value": "Dashboard for MinIO"
        },
        "search": {
          "queries": [
            {
              "id": "f5d30f7f-2866-41be-bb22-e37014edcfce",
              "timerange": {
                "type": "relative",
                "from": 300
              },
              "filter": {
                "type": "or",
                "filters": [
                  {
                    "type": "stream",
                    "id": "df3ff755-d487-4496-98c0-ac096b326597"
                  }
                ]
              },
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "from": 604800
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "number",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "status",
                      "limit": 10
                    },
                    {
                      "type": "values",
                      "field": "status_code",
                      "limit": 10
                    }
                  ],
                  "type": "pivot",
                  "id": "2a17cbe9-b47a-457c-83f3-682b2dd1cad0",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "trend",
                  "timerange": {
                    "type": "offset",
                    "source": "search_type",
                    "id": "c528edd1-c921-487f-be0d-2c36fcc45410",
                    "offset": "1i"
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "Message Count",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [],
                  "type": "pivot",
                  "id": "bf12e97f-de77-4eb9-8a2d-c6851d862548",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "from": 604800
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "number",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "object",
                      "limit": 10
                    },
                    {
                      "type": "values",
                      "field": "bucket",
                      "limit": 10
                    }
                  ],
                  "type": "pivot",
                  "id": "557a9ce5-54d8-443e-8d2a-6729ff468b41",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "from": 604800
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "NAME_FIELD",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "status_code",
                      "limit": 15
                    }
                  ],
                  "type": "pivot",
                  "id": "1d073a02-4e04-4a09-b8fb-8ed3671b5bb7",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "from": 604800
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "number",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "bucket",
                      "limit": 10
                    },
                    {
                      "type": "values",
                      "field": "bucket_region",
                      "limit": 10
                    }
                  ],
                  "type": "pivot",
                  "id": "b7f215a3-ed16-4722-98b8-9e480e6f4779",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": null,
                  "timerange": {
                    "type": "relative",
                    "from": 3600
                  },
                  "offset": 0,
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "filter": null,
                  "decorators": [],
                  "type": "messages",
                  "id": "8236ac82-dc5a-4889-99f5-5465bf4f82fb",
                  "limit": 150
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "from": 3600
                  },
                  "streams": [
                    "df3ff755-d487-4496-98c0-ac096b326597"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "Message Count",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [],
                  "type": "pivot",
                  "id": "c528edd1-c921-487f-be0d-2c36fcc45410",
                  "column_groups": [],
                  "sort": []
                }
              ]
            }
          ],
          "parameters": [],
          "requires": {},
          "owner": "admin",
          "created_at": "2021-10-24T04:10:08.304Z"
        },
        "created_at": "2021-10-16T11:12:02.954Z",
        "requires": {},
        "state": {
          "f5d30f7f-2866-41be-bb22-e37014edcfce": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "widget": {
                "c3daa9e0-80b6-40e1-846a-6a385ac7de3f": "Message Count",
                "bcb1c5eb-1653-4366-978e-5abfe26673a6": "Audit messages",
                "fe30d0ea-8be5-4b10-aed7-5698c3eeb1a3": "Response status code",
                "365a0b57-1b39-4860-ad9e-1eb3b8e0c533": "Response status",
                "a3f749e1-565b-4bdd-8cc0-8d6d883f6edf": "Most used buckets",
                "c84b99ab-9007-41d6-894c-ef2ac21686b3": "Number of messages in the last hour",
                "199d7460-b5a9-49bd-86c2-4bf0f262d4eb": "Most used objects"
              },
              "tab": {
                "title": "MinIO Cluster Audit #1"
              }
            },
            "widgets": [
              {
                "id": "a3f749e1-565b-4bdd-8cc0-8d6d883f6edf",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 604800
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "visualization": "table",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "bucket",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    },
                    {
                      "field": "bucket_region",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "number"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": {
                    "chart_colors": [
                      {
                        "field_name": "200",
                        "chart_color": "#33691e"
                      },
                      {
                        "field_name": "204",
                        "chart_color": "#d5d398"
                      },
                      {
                        "field_name": "400",
                        "chart_color": "#b71c1c"
                      },
                      {
                        "field_name": "404",
                        "chart_color": "#a5426d"
                      }
                    ]
                  },
                  "sort": []
                }
              },
              {
                "id": "c84b99ab-9007-41d6-894c-ef2ac21686b3",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 3600
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "visualization": "numeric",
                  "event_annotation": false,
                  "row_pivots": [],
                  "series": [
                    {
                      "config": {
                        "name": "Message Count"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": {
                    "trend": true,
                    "trend_preference": "NEUTRAL"
                  },
                  "formatting_settings": null,
                  "sort": []
                }
              },
              {
                "id": "bcb1c5eb-1653-4366-978e-5abfe26673a6",
                "type": "messages",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 3600
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "fields": [
                    "timestamp",
                    "remote_host_ip",
                    "status",
                    "status_code",
                    "source"
                  ],
                  "show_message_row": true,
                  "decorators": [],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                }
              },
              {
                "id": "365a0b57-1b39-4860-ad9e-1eb3b8e0c533",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 604800
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "visualization": "table",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "status",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    },
                    {
                      "field": "status_code",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "number"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": {
                    "chart_colors": [
                      {
                        "field_name": "200",
                        "chart_color": "#33691e"
                      },
                      {
                        "field_name": "204",
                        "chart_color": "#d5d398"
                      },
                      {
                        "field_name": "400",
                        "chart_color": "#b71c1c"
                      },
                      {
                        "field_name": "404",
                        "chart_color": "#a5426d"
                      }
                    ]
                  },
                  "sort": []
                }
              },
              {
                "id": "199d7460-b5a9-49bd-86c2-4bf0f262d4eb",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 604800
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "visualization": "table",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "object",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    },
                    {
                      "field": "bucket",
                      "type": "values",
                      "config": {
                        "limit": 10
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "number"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": {
                    "chart_colors": [
                      {
                        "field_name": "200",
                        "chart_color": "#33691e"
                      },
                      {
                        "field_name": "204",
                        "chart_color": "#d5d398"
                      },
                      {
                        "field_name": "400",
                        "chart_color": "#b71c1c"
                      },
                      {
                        "field_name": "404",
                        "chart_color": "#a5426d"
                      }
                    ]
                  },
                  "sort": []
                }
              },
              {
                "id": "fe30d0ea-8be5-4b10-aed7-5698c3eeb1a3",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "from": 604800
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [
                  "df3ff755-d487-4496-98c0-ac096b326597"
                ],
                "config": {
                  "visualization": "pie",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "status_code",
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "NAME_FIELD"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": {
                    "chart_colors": [
                      {
                        "field_name": "200",
                        "chart_color": "#33691e"
                      },
                      {
                        "field_name": "204",
                        "chart_color": "#d5d398"
                      },
                      {
                        "field_name": "400",
                        "chart_color": "#b71c1c"
                      },
                      {
                        "field_name": "404",
                        "chart_color": "#a5426d"
                      }
                    ]
                  },
                  "sort": []
                }
              }
            ],
            "widget_mapping": {
              "c84b99ab-9007-41d6-894c-ef2ac21686b3": [
                "bf12e97f-de77-4eb9-8a2d-c6851d862548",
                "c528edd1-c921-487f-be0d-2c36fcc45410"
              ],
              "199d7460-b5a9-49bd-86c2-4bf0f262d4eb": [
                "557a9ce5-54d8-443e-8d2a-6729ff468b41"
              ],
              "a3f749e1-565b-4bdd-8cc0-8d6d883f6edf": [
                "b7f215a3-ed16-4722-98b8-9e480e6f4779"
              ],
              "365a0b57-1b39-4860-ad9e-1eb3b8e0c533": [
                "2a17cbe9-b47a-457c-83f3-682b2dd1cad0"
              ],
              "bcb1c5eb-1653-4366-978e-5abfe26673a6": [
                "8236ac82-dc5a-4889-99f5-5465bf4f82fb"
              ],
              "fe30d0ea-8be5-4b10-aed7-5698c3eeb1a3": [
                "1d073a02-4e04-4a09-b8fb-8ed3671b5bb7"
              ]
            },
            "positions": {
              "a3f749e1-565b-4bdd-8cc0-8d6d883f6edf": {
                "col": 10,
                "row": 1,
                "height": 4,
                "width": 3
              },
              "c84b99ab-9007-41d6-894c-ef2ac21686b3": {
                "col": 1,
                "row": 1,
                "height": 2,
                "width": 3
              },
              "365a0b57-1b39-4860-ad9e-1eb3b8e0c533": {
                "col": 1,
                "row": 7,
                "height": 4,
                "width": 3
              },
              "fe30d0ea-8be5-4b10-aed7-5698c3eeb1a3": {
                "col": 1,
                "row": 3,
                "height": 4,
                "width": 3
              },
              "bcb1c5eb-1653-4366-978e-5abfe26673a6": {
                "col": 4,
                "row": 1,
                "height": 10,
                "width": 6
              },
              "199d7460-b5a9-49bd-86c2-4bf0f262d4eb": {
                "col": 10,
                "row": 5,
                "height": 6,
                "width": 3
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          }
        },
        "properties": [],
        "owner": "admin",
        "title": {
          "@type": "string",
          "@value": "MinIO"
        },
        "type": "DASHBOARD",
        "description": {
          "@type": "string",
          "@value": ""
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "ecc0d0f0-97b8-44b4-afca-e92157f6db1b",
      "data": {
        "name": "MINIO_AUTHORIZATION",
        "pattern": "%{GREEDYDATA:signature_algorithm}\\s+((Credential=%{DATA:access_key_id}/)|(%{DATA:access_key_id}:))"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "3e81c487-0b17-4fda-8949-269742bb241c",
      "data": {
        "title": {
          "@type": "string",
          "@value": "add parsed time_response field to MinIO Audit messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"add parsed time_response field to MinIO Audit messages\"\n\nwhen\n    has_field(\"time_response\")\n\nthen\n    let parse_field_time_response = grok(\n                                        pattern: \"%{MINIO_TIME_HTTP:time_response}\", \n                                        value: to_string($message.time_response), \n                                        only_named_captures: true\n                                    );\n    set_fields(fields: parse_field_time_response);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "stream",
        "version": "1"
      },
      "id": "df3ff755-d487-4496-98c0-ac096b326597",
      "data": {
        "alarm_callbacks": [],
        "outputs": [],
        "remove_matches": {
          "@type": "boolean",
          "@value": true
        },
        "title": {
          "@type": "string",
          "@value": "MinIO Cluster"
        },
        "stream_rules": [
          {
            "type": {
              "@type": "string",
              "@value": "EXACT"
            },
            "field": {
              "@type": "string",
              "@value": "source"
            },
            "value": {
              "@type": "string",
              "@value": "minio cluster"
            },
            "inverted": {
              "@type": "boolean",
              "@value": false
            },
            "description": {
              "@type": "string",
              "@value": ""
            }
          }
        ],
        "alert_conditions": [],
        "matching_type": {
          "@type": "string",
          "@value": "AND"
        },
        "disabled": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "MinIO Cluster Stream"
        },
        "default_stream": {
          "@type": "boolean",
          "@value": false
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "e2510a98-758d-4b8a-a93b-f4c7fd9ae7ab",
      "data": {
        "name": "NUMBER",
        "pattern": "(?:%{BASE10NUM})"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "5ba235eb-be1d-430a-ba6a-7c584c7a68dc",
      "data": {
        "name": "GREEDYDATA",
        "pattern": ".*"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "cb478c43-be80-49f7-b32e-b528396bc7a4",
      "data": {
        "name": "DATA",
        "pattern": ".*?"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "grok_pattern",
        "version": "1"
      },
      "id": "afe7e7eb-a285-4cfc-b1b2-d6d45369a520",
      "data": {
        "name": "BASE10NUM",
        "pattern": "(?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))"
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=4.1.3+9d79c05"
        }
      ]
    }
  ]
}